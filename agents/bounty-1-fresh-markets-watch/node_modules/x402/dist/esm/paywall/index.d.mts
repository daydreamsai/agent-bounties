import { P as PaymentRequirements } from '../x402Specs-CfmzRyEi.mjs';
import 'zod';

interface PaywallOptions {
    amount: number;
    paymentRequirements: PaymentRequirements[];
    currentUrl: string;
    testnet: boolean;
    cdpClientKey?: string;
    appName?: string;
    appLogo?: string;
    sessionTokenEndpoint?: string;
}
/**
 * Generates an HTML paywall page that allows users to pay for content access
 *
 * @param options - The options for generating the paywall
 * @param options.amount - The amount to be paid in USD
 * @param options.paymentRequirements - The payment requirements for the content
 * @param options.currentUrl - The URL of the content being accessed
 * @param options.testnet - Whether to use testnet or mainnet
 * @param options.cdpClientKey - CDP client API key for OnchainKit
 * @param options.appName - The name of the application to display in the wallet connection modal
 * @param options.appLogo - The logo of the application to display in the wallet connection modal
 * @param options.sessionTokenEndpoint - The API endpoint for generating session tokens for Onramp authentication
 * @returns An HTML string containing the paywall page
 */
declare function getPaywallHtml({ amount, testnet, paymentRequirements, currentUrl, cdpClientKey, appName, appLogo, sessionTokenEndpoint, }: PaywallOptions): string;

export { getPaywallHtml };
